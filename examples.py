import texas as tx

def example_01_corpus():
	print(">> example_01_corpus:")
	myCorpus = tx.Corpus()
	print ( "type = " + myCorpus.getType() )
	print ( "JSON = " + myCorpus.getJSON() )
	myCorpus.setID("9j3nb94d")
	print ( "JSON = " + myCorpus.getJSON() )
	myCorpus.setMeta("DCT","2020-06-04")
	print ( "JSON = " + myCorpus.getJSON() )
	myCorpus.setMeta("DCT",None)
	print ( "JSON = " + myCorpus.getJSON() )
	myCorpus.setMeta("DCT","2020-06-04")
	myCorpus.setMeta("name","TexAS_Example_Corpus")
	myCorpus.setText("What is the sense of having a text for a corpus?")
	print ( "JSON = " + myCorpus.getJSON() )
	
def example_02_document():
	print(">> example_02_document:")
	myDoc = tx.Document()
	myDoc.setID("2409jgv0")
	print ( "type = " + myDoc.getType() )
	print ( "myDoc.JSON = " + myDoc.getJSON() )

def example_03_documents():
	print(">> example_03_documents:")
	myCorpus = tx.Corpus()
	myCorpus.setID("98hn4g4i")
	myCorpus.setDCT("2020-06-05")
	# myCorpus.setAsListOf("document","documents")
	myDoc1 = tx.Document()
	myDoc1.setID("b4kijfg9")
	myDoc2 = tx.Document()
	myDoc2.setID("pd873jf6")
	myDoc3 = tx.Document()
	myDoc3.setID("sk93jf23")
	myCorpus.add(myDoc1)
	myCorpus.add(myDoc2)
	myCorpus.add(myDoc3)
	print ( "type = " + myCorpus.getType() )
	print ( "myCorpus.JSON = " + myCorpus.getJSON() )
	# myCorpus2 = tx.Corpus()
	# myCorpus2.setID("12345678")
	# myCorpus2.add(myDoc3)
	# print("---")
	# print ( "myCorpus.JSON = " + myCorpus.getJSON() )
	# print("---")
	# print ( "myCorpus2.JSON = " + myCorpus2.getJSON() )
	# print("---")
	# print("")
	# mySentences = tx.ListOf("sentence","sentences")
	# mySentences.setMeta("dct","2020-06-05")
	# mySent1 = tx.Sentence()
	# mySent1.setID("s1")
	# mySent1.setText("Do you have anything else to say?")
	# mySent2 = tx.Sentence()
	# mySent2.setID("s2")
	# mySent2.setText("This is my last comment.")
	# mySentences.add(mySent1)
	# mySentences.add(mySent2)
	# # print ( "mySent1.JSON = " + mySent1.getJSON() )
	# # print("---")
	# # print ( "mySent2.JSON = " + mySent2.getJSON() )
	# # print("---")
	# # SWITCH: remove required to avoid recursive parent-child
	# # mySent2.remove(mySent1)
	# # mySent1.add(mySent2)
	# print ( "mySentences.JSON = " + mySentences.getJSON() )
	# print("---")
	# print("")
	
	
def example_04_parse_setences():
	print(">> example_04_parse_setences:")
	# myJSON= '{"type": "list", "meta": {"dct": "2020-06-05", "authors": ["hegler","tissot"]}, "bits": [{"type": "sentence", "id": "s1", "meta": {"status": "deprecated"}, "text": "Do you have anything else to say?"}, {"type": "sentence", "id": "s2", "meta": {"status": "active"}, "text": "This is my last comment." }]}'
	myJSON= '{"type": "list", "id": "d9jrjg3q", "meta": {"dct": "2020-06-05", "authors": ["hegler", "tissot"]}, "bits": [{"type": "sentence", "id": "s1", "meta": {"status": "deprecated", "list_id": "d9jrjg3q"}, "text": "Do you have anything else to say?"}, {"type": "sentence", "id": "s2", "meta": {"status": "active", "list_id": "d9jrjg3q"}, "text": "This is my last comment.", "bits": [{"type": "corpus", "id": "98hn4g4i", "meta": {"dct": "2020-06-05", "sentence_id": "s2"}, "bits": [{"type": "document", "id": "b4kijfg9", "meta": {"corpus_id": "98hn4g4i"}}, {"type": "document", "id": "pd873jf6", "meta": {"corpus_id": "98hn4g4i"}}, {"type": "document", "id": "sk93jf23", "meta": {"corpus_id": "98hn4g4i"}}]}]}]}'
	mySents = tx.ListOf("sentence","sentences")
	mySents.setUUID()
	# print ( "mySents.JSON = " + mySents.getJSON() )
	# print("---")
	mySents.parseJSON(myJSON)
	mySent1 = mySents.get("s1")
	mySent2 = mySents.get("s2")
	# print(type(mySents).__name__)
	# print(type(mySent1).__name__)
	# print(type(mySent2).__name__)
	print ( "mySents.JSON = " + mySents.getJSON() )
	print("---")


if __name__ == "__main__":
	# example_01_corpus()
	# example_02_document()
	example_03_documents()
	example_04_parse_setences()
	